<!-- This XML file describes the interface of the python operator. It defines the required source product(s) and the parameters
     for the processing. By using the information of this file the graphical user interface is automatically generated and also
     the help on the command line is derived from the information provided here.
-->
<operator>
    <!-- The name uniquely identifies the operator within SNAP -->
    <name>org.esa.snap.python.WindSpeedOp</name>
    <!-- The alias is a more user-friendly name, e.g. to be used on the command line -->
    <alias>wind_speed_op</alias>
    <!-- The operatorClass must always be org.esa.snap.gpf.python.PyOperator -->
    <operatorClass>org.esa.snap.python.gpf.PyOperator</operatorClass>

    <version>1.0</version>
    <authors>Declan Dunne, Louis de Montera</authors>
    <copyright>Copyright (C) 2019 MaREI</copyright>

    <description>
        This example uses SNAP Python API.
        It demonstrates the development of a a Python processor plug-in
        which adjusts wind speed to a new height for Sentinel 1 Level 2 OCN products.
    </description>

    <namedSourceProducts>
        <!-- One or more source products can be specified.
             In the GUI only one is currently supported. On the command line multiple source products
             can be specified by referencing them with the here defined names.
         -->
        <sourceProduct>
            <name>Name</name>
            <description>The source product</description>
        </sourceProduct>
    </namedSourceProducts>

    <parameters>
        <parameter>
            <!-- The name of the parameter; use context.getParameter('windHeight') in your Python code to retrieve the value -->
            <name>windHeight</name>
            <!-- The description is shown in the help on the command line and also as tooltip in the GUI -->
            <description>Altitude of the turbine hub height</description>
            <!-- The type of the parameter; can be boolean, byte, short, int, long, float, double, java.lang.String -->
            <dataType>double</dataType>
            <!-- The default value of the parameter; this is used if no value is specified by the user -->
            <defaultValue>100.0</defaultValue>
            <!-- An empty parameter is not allowed -->
            <notEmpty>true</notEmpty>
        </parameter>
        <parameter>
            <name>shearExponent</name>
            <description>Shear exponent</description>
            <label>Shear exponent</label>
            <dataType>double</dataType>
            <defaultValue>0.1</defaultValue>
            <notEmpty>true</notEmpty>
        </parameter>
    </parameters>
</operator>